@model endep.Models.Persona.Persona

@{
    ViewBag.Title = "Crear cuenta";
}


<!-- page content -->
        <div class="row">
            <div class="col-md-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">                       
                        <h2>Información Personal @ViewBag.Mensaje</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-question"></i></a>
                                <ul class="dropdown-menu" role="menu">
                                    <li>
                                        @Html.ActionLink("Ayuda", "Index", "Ayuda")
                                    </li>
                                </ul>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">                       
                        <br />
                        @using (Html.BeginForm("updatePerfil", "Persona", FormMethod.Post, new { role = "form", @class = "form-horizontal form-label-left input_mask" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.UserId)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.TextBoxFor(m => m.Identificacion, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.DropDownList("Sexo", null, htmlAttributes: new { @class = "form-control"})  
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PaisResidencia, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.DropDownList("Pais", ViewData["Pais"] as List<SelectListItem>, htmlAttributes: new { @class = "form-control", @id = "Pais"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DtoResidencia, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.DropDownList("Departamento", null, htmlAttributes: new { @class = "form-control", @id = "idDepartamento" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CiudadResidencia, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.DropDownList("Municipio", null, htmlAttributes: new { @class = "form-control", @id = "idMunicipio" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.TextBoxFor(m => m.FechaNacimiento, new { @class = "form-control" })
                                </div>
                            </div>                           
                            <br />
                            <div class="x_title">
                                <h2>Información de la cuenta</h2>                                
                                <div class="clearfix"></div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                <div class="col-md-6 col-sm-9 col-xs-12">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                </div>
                            </div>                          
                            <div class="ln_solid"></div>
                            <div class="form-group">
                                <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-3">
                                    <input type="submit" value="Actualizar" class="btn btn-success" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>            
        </div>
<!-- /page content -->
@section scripts{

<script type="text/javascript">
    $(document).ready( function (){
        $("#Pais").change(function () {
            var valor = document.getElementById("Pais").value;
            $("#idDepartamento").empty();
            var urlDatos = "@Url.Action("GetDepartamento", "Persona")" + "/" +valor;
            
            $.ajax({
                type: 'POST',
                url: urlDatos,
                dataType: 'json',
                data: { id: $("#Pais").val() },

                success: function (departamentos) {
                    $.each(departamentos, function (i, departamento) {
                        $("#idDepartamento").append('<option value="'+ departamento.Value +'">' + departamento.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Fallo al traer los registros' + ex);
                }
            })

        })

        //COnsultar los municipios

        $("#idDepartamento").change(function () {
            var valor = document.getElementById("idDepartamento").value;
            $("#idMunicipio").empty();
            var urlDatos = "@Url.Action("GetMunicipios", "Persona")" + "/" +valor;         

            $.ajax({
                type: 'POST',
                url: urlDatos,
                dataType: 'json',
                data: { id: $("#idDepartamento").val() },

                success: function (municipios) {
                    $.each(municipios, function (i, municipio) {
                        $("#idMunicipio").append('<option value="' + municipio.Value + '">' + municipio.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Fallo al traer los registros' + ex);
                }
            })

        })

    });
</script>

    @Scripts.Render("~/bundles/FastClickJS")
    @Scripts.Render("~/bundles/bootstrapProgressbarJS")
    @Scripts.Render("~/bundles/iCheckJS")
    @Scripts.Render("~/bundles/bootstrapDaterangepickerJS")
    @Scripts.Render("~/bundles/bootstrapWysiwygJS")
    @Scripts.Render("~/bundles/tagsinputJS")
    @Scripts.Render("~/bundles/SwitcheryJS")
    @Scripts.Render("~/bundles/Select2JS")
    @Scripts.Render("~/bundles/ParsleyJS")
    @Scripts.Render("~/bundles/AutosizeJS")
    @Scripts.Render("~/bundles/autocompleteJS")
    @Scripts.Render("~/bundles/starrrJS")
    @Scripts.Render("~/bundles/customJS")    
}
@section css{
    @Styles.Render("~/Content/iCheckCSS")
    @Styles.Render("~/Content/Select2CSS")
    @Styles.Render("~/Content/SwitcheryCSS")
    @Styles.Render("~/Content/starrrCSS")
    @Styles.Render("~/Content/bootstrapDaterangepickerCSS")
}